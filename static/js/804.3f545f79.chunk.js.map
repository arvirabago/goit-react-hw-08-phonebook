{"version":3,"file":"static/js/804.3f545f79.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"ContactForm_subtitle__aOfWs\",\"input\":\"ContactForm_input__Bl93P\",\"add_contact_button\":\"ContactForm_add_contact_button__9ewDu\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const itemsSelector = (state) => state.contacts.items;\nexport const isLoadingSelector = (state) => state.contacts.isLoading;\nexport const errorSelector = (state) => state.contacts.error;\nexport const filterSelector = (state) => state.filter.value;\n","import { useState } from \"react\";\nimport style from \"./ContactForm.module.css\";\nimport { nanoid } from \"nanoid\";\nimport { itemsSelector } from \"./../../redux/contacts/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createContact } from \"../../redux/contacts/operations\";\n\nexport const ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(itemsSelector);\n  const dispatch = useDispatch();\n\n  const handleNameChange = (evt) => {\n    const { value } = evt.target;\n    setName(value);\n  };\n\n  const handleNumberChange = (evt) => {\n    const { value } = evt.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const existingContact = contacts.find((contact) => contact.name === name);\n    if (existingContact !== undefined) {\n      alert(`${event.name} is already in contacts`);\n    } else {\n      const contact = {\n        id: nanoid(),\n        name: name,\n        number: number,\n      };\n\n      dispatch(createContact(contact));\n    }\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit} className={style.contactForm}>\n      <h3 className={style.subtitle}>Name</h3>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Z]+(([' -][a-zA-Z ])?[a-zA-Z]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleNameChange}\n        className={style.input}\n      />\n      <br />\n      <h3 className={style.subtitle}>Number</h3>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleNumberChange}\n        className={style.input}\n      />\n      <br />\n      <button type=\"submit\" className={style.add_contact_button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"contactDetails\":\"ContactItem_contactDetails__lavca\",\"deleteButton\":\"ContactItem_deleteButton__AvFnv\"};","import PropTypes from \"prop-types\";\nimport style from \"./ContactItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"./../../redux/contacts/operations\";\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={style.contactItem}>\n      <span className={style.contactDetails}>{name} : {number}</span>\n      <button\n        type=\"button\"\n        className={style.deleteButton}\n        onClick={handleDeleteContact}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { ContactItem } from \"../ContactItem/ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport { filterSelector, itemsSelector } from \"../../redux/contacts/selectors\";\nimport style from \"./ContactList.module.css\";\n\nexport const ContactList = () => {\n  const contacts = useSelector(itemsSelector);\n  const filter = useSelector(filterSelector);\n\n  const filteredContacts = contacts.filter((contact) => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  return (\n    <ul className={style.contactList}>\n      {filteredContacts.map((contact) => (\n        <ContactItem\n          key={contact.id} // Don't forget to add a unique key prop\n          name={contact.name}\n          number={contact.number}\n          id={contact.id}\n        ></ContactItem>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import style from \"./Filter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterSelector } from \"../../redux/contacts/selectors\";\nimport { setFilter } from \"../../redux/contacts/filterSlice\";\n\nexport const Filter = () => {\n  const value = useSelector(filterSelector);\n  const dispatch = useDispatch();\n  const handleFilterChange = (event) => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <label className={style.description}>Find contacts by name</label>\n      <br />\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={handleFilterChange}\n        placeholder=\"Enter contact to search\"\n        className={style.input}\n      ></input>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contacts_title__HJPSk\",\"subtitle\":\"Contacts_subtitle__lo4Me\",\"container\":\"Contacts_container__TJkHA\"};","import { ContactForm } from \"./../components/ContactForm/ContactForm\";\nimport { ContactList } from \"./../components/ContactList/ContactList\";\nimport { Filter } from \"./../components/Filter/Filter\";\nimport style from \"./Contacts.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  errorSelector,\n  isLoadingSelector,\n} from \"./../redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { getAllContacts } from \"./../redux/contacts/operations\";\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(isLoadingSelector);\n  const error = useSelector(errorSelector);\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  return (\n    <section className={style.container}>\n      <h1 className={style.title}>Phonebook</h1>\n      <ContactForm></ContactForm>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h1 className={style.subtitle}>Contacts</h1>\n      <Filter></Filter>\n      <ContactList></ContactList>\n    </section>\n  );\n}\n"],"names":["nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","itemsSelector","state","contacts","items","isLoadingSelector","isLoading","errorSelector","error","filterSelector","filter","value","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","_jsxs","onSubmit","event","preventDefault","form","currentTarget","existingContact","find","contact","alert","concat","createContact","reset","className","style","children","_jsx","type","pattern","title","required","onChange","evt","target","ContactItem","_ref","onClick","deleteContact","ContactList","filteredContacts","toLowerCase","includes","map","Filter","_Fragment","setFilter","placeholder","Contacts","useEffect","getAllContacts"],"sourceRoot":""}